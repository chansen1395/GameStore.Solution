@{
  Layout = "_Layout";
}

@using System.Security.Claims
@model GameStore.Models.Game

<h2>Game Details</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.GameName): @Html.DisplayFor(model => model.GameName)</h3>
<h5>@Html.DisplayNameFor(model => model.Publisher): @Html.DisplayFor(model => model.Publisher)</h5>
<h5>@Html.DisplayNameFor(model => model.Genre): @Html.DisplayFor(model => model.Genre)</h5>
<h5>@Html.DisplayNameFor(model => model.Inventory): @Html.DisplayFor(model => model.Inventory)</h5>
<h5>@Html.DisplayNameFor(model => model.RentPrice): @Html.DisplayFor(model => model.RentPrice)</h5>

@if(@Model.Inventory == 0)
{
  <p>No copies of this game are in stock currently.</p>
}
else
{
  <p>@Html.ActionLink("Checkout Game", "CheckoutGame", "Games", new { id = Model.GameId})</p>
}

@if (User.Identity.IsAuthenticated)
{
  @if(@Model.JoinEntities.Count == 0)
  {
    <p>No Customers are renting this game.</p>
  }

  else
  {
    <h4>Customers renting this game:</h4>
    <ul>
    @foreach(var join in Model.JoinEntities)
    {
      @if(!join.Returned)
      {
        <li>@Html.ActionLink($"{join.Customer.CustomerName}", "Details", "Customers", new { id = join.Customer.CustomerId}, null)</li>
        @using (Html.BeginForm("ReturnGame", "Customers"))
        {
          @Html.Hidden("joinId", @join.CustomerGameId)
          @Html.Hidden("gameId", @join.GameId)
          <input type="submit" value="Return"/>
        }
      }
    }
    </ul>
  }
  <br>
    <h4>Customer checkout history:</h4>
    <ol>
    @* @{ int historyCount = 0; } *@
    @foreach(var join in Model.JoinEntities)
    {
      @* @if(join.Returned && (historyCount <=10)) *@
      @if(join.Returned)
      {
        <li>@Html.ActionLink($"{join.Customer.CustomerName}", "Details", "Customers", new {id = join.Customer.CustomerId}, null)</li>
      }
      @* { historyCount ++; } *@
    }
    </ol>
}
<div id="footer">
  <button class="bottom">@Html.ActionLink("See available games", "Index", "Games")</button>
  <button class="bottom">@Html.ActionLink("Edit game", "Edit", new { id = Model.GameId })</button>
</div>