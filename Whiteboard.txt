GameStore
Store Employee:
Stock, update, delete, view list/details(publisher, genre? etc., etc.), play
Stock/update/delete only if logged in
*see overdue info

Customers:
create account - done
rent/return
due date, late fees(stretch)
buy(stretch)
view list of available games(index) & details(also have a link to checkout) *search?
checkout/purchase history



Tables:
Employees
Customers
Games

As a user, I want to create an account.
As a user, I want to be able to log in and log off.
As a user, I want to be able to see my account details.
Add authorization:

As a user, I should only be able to create, read, update and delete if I am logged in.



Recipe Box
Build an app that allows users to keep track of recipes. Here are some user stories:

As a user, I want to add a recipe with ingredients and instructions, so I remember how to prepare my favorite dishes.
As a user, I want to tag my recipes with different employees, so recipes are easier to find. A recipe can have many tags and a tag can have many recipes.
As a user, I want to be able to update and delete tags, so I can have flexibility with how I categorize recipes.
As a user, I want to edit my recipes, so I can make improvements or corrections to my recipes.
As a user, I want to be able to delete recipes I don't like or use, so I don't have to see them as choices.
As a user, I want to rate my recipes, so I know which ones are the best.
As a user, I want to list my recipes by highest rated so I can see which ones I like the best.
As a user, I want to see all recipes that use a certain ingredient, so I can more easily find recipes for the ingredients I have.
Add authentication:

OR

As a user, I should only be able to create, update and delete if I am logged in. All users should be able to have read functionality.
Library
Create an app to catalog a library's books and let patrons check them out. Below are some user stories to get you started. To differentiate between the two users (librarians and patrons) and their unique needs, create separate locations in the app for each user to go to access their functionality. There's no one way to do this, so discuss with your pair what the best structure is before you start coding. Make sure to add basic authentication.

As time allows, explore the optional further exploration topic of authorization with user roles to distinguish between librarians and patrons. Authorization with user roles is introduced in an upcoming lesson, and is not required for the independent project.

// As a librarian, I want to create, read, update, delete, and list books in the catalog, so that we can keep track of our inventory.
// As a librarian, I should only be able to create, update and delete if I am logged in. All users should be able to have read functionality. (Hint: authorize CUD routes for books.)
As a librarian, I want to search for a book by author or title, so that I can find a book when there are a lot of books in the library.
As a librarian, I want to enter multiple authors for a book, so that I can include accurate information in my catalog. (Hint: make an authors table and a books table with a many-to-many relationship.)
As a patron, I want to check a book out, so that I can take it home with me. I should only be able to do this if I am logged in.
As a patron, I want to know how many copies of a book are on the shelf, so that I can see if any are available. (Hint: make a copies table; a book should have many copies.)
As a patron, I want to see a history of all the books I checked out, so that I can look up the name of that awesome sci-fi novel I read three years ago. (Hint: make a checkouts table that is a join table between patrons and copies.)
As a patron, I want to know when a book I checked out is due, so that I know when to return it.
As a librarian, I want to see a list of overdue books, so that I can call up the patron who checked them out and tell them to bring them back - OR ELSE!


Co-authored-by: Brandon Eads <brandon181989@hotmail.com>"